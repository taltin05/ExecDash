@model ExecDash.DomainModel.Model.UserCredential

@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts
{
    <script src="~/Scripts/jquery.validate.js" type="text/javascript"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js" type="text/javascript"></script>
}

<div class="container">
    <div class="row">
        <div class="col-sm-12 col-sm-offset-7">
            <div class="row">
                <div class="col-12 col-md-7 col-lg-5 col-xl-5">
                    <div class="card">
                        <div class="card-header">Login</div>
                        <div class="card-body">
                            @Html.ValidationSummary(true)
                            @using (Html.BeginForm("Login", "Login", new { redirectUrl = ViewBag.RedirectUrl, }, FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()

                                <fieldset class="form-group">
                                    <label for="userid">User ID</label>
                                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })

                                </fieldset>
                                <fieldset class="form-group">
                                    <label for="last_name">Password</label>
                                    @Html.PasswordFor(model => model.Password, new { @class = "form-control" })

                                </fieldset>

                                <input class="custom-link btn btn-primary btn-block btn" type="submit" id="btnLogin" value="Sign In" />

                                <div class="val mt-3" role="alert">
                                    <p style="margin:0; padding: 0 0 0 0;">
                                        @Html.ValidationMessageFor(m => m.UserName, string.Empty, new { @class = "text-danger" })
                                    </p>
                                    <p style="margin:0; padding: 0 0 0 0;">
                                        @Html.ValidationMessageFor(m => m.Password, string.Empty, new { @class = "text-danger" })
                                    </p>
                                    <p style="margin:0; padding: 0 0 0 0;">
                                        @if (!ViewData.ModelState.IsValid)
                                        {
                                            <div>@Html.ValidationMessage("ErrorMessage", new { @class = "text-danger" })</div>
                                        }
                                    </p>
                                </div>

                                <div id="entervalues" class="required"></div>
                                <div class="signin-links">
                                    <a href="#">Forgot Password ?</a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

